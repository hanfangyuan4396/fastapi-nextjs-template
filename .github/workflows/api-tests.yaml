name: API Tests

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'api/pytest.ini'
      - 'api/requirements.txt'
      - '.github/workflows/api-tests.yaml'

jobs:
  test:
    name: Run Pytest (API)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: api/requirements.txt

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          set -euo pipefail
          python -m pytest -q \
            --cov=./ \
            --cov-report=term-missing \
            --cov-report=json:coverage.json

      - name: Coverage Summary
        if: always()
        run: |
          set -euo pipefail
          TOTAL_COVERAGE=$(python -c 'import json; d=json.load(open("coverage.json")); print(d.get("totals",{}).get("percent_covered_display") or d.get("totals",{}).get("percent_covered") or "")')
          echo "### Test Coverage Summary :test_tube:" >> $GITHUB_STEP_SUMMARY
          if [ -n "$TOTAL_COVERAGE" ]; then
            echo "Total Coverage: ${TOTAL_COVERAGE}%" >> $GITHUB_STEP_SUMMARY
          else
            echo "Total Coverage: N/A" >> $GITHUB_STEP_SUMMARY
          fi
          python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY || true
