name: Style Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  check-changes:
    name: Determine changed scopes
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.changes.outputs.api }}
      web-changed: ${{ steps.changes.outputs.web }}
      workflow-changed: ${{ steps.changes.outputs.workflow }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          base: main
          filters: |
            api:
              - 'api/**'
            web:
              - 'web/**'
            workflow:
              - '.github/workflows/style.yaml'

  python-style:
    name: API Ruff Style
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.api-changed == 'true' || needs.check-changes.outputs.workflow-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Ruff
        run: pip install ruff==0.12.8

      - name: Ruff check
        run: |
          ruff --version
          ruff check ./api
          ruff format --check ./api

      - name: Lint hints
        if: failure()
        run: |
          echo '请运行: ruff check --fix ./api && ruff format ./api 来自动修复可修复的问题。'
          echo '若仍有未修复的问题，请根据 Ruff 的输出逐项手动修复剩余问题。'


  web-eslint:
    name: Web ESLint
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.web-changed == 'true' || needs.check-changes.outputs.workflow-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies (npm)
        working-directory: web
        run: npm ci

      - name: Run ESLint
        working-directory: web
        run: npm run lint -- .

      - name: Lint hints
        if: failure()
        run: |
          echo '请在 web 目录运行: npm run lint -- --fix . 来自动修复可修复的问题。'
          echo '若仍有未修复的问题，请根据 ESLint 输出逐项手动修复剩余问题。'
